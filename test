#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[1;36m'
WHITE='\033[1;37m'
NC='\033[0m'

print_header() {
    printf "\n${CYAN}═══════════════════════════════════════════════════════════════════════════════${NC}\n"
    printf "${WHITE} %-52s %-10s %-10s ${NC}\n" "Test" "Result" "Leaks"
    printf "${CYAN}═══════════════════════════════════════════════════════════════════════════════${NC}\n"
}

reset_files() {
    rm -f infile outfile expected_outfile
    echo -e "$1" > infile
}

run_test() {
    local desc=$1
    local content=$2
    local cmd1=$3
    local cmd2=$4

    reset_files "$content"
    < infile $cmd1 | $cmd2 > expected_outfile 2>/dev/null
    local expected=$(cat expected_outfile 2>/dev/null)
    rm -f expected_outfile

    ./pipex infile "$cmd1" "$cmd2" outfile > /dev/null 2>&1
    local result=$(cat outfile 2>/dev/null)

    if [[ "$result" == "$expected" ]]; then
        res_status="${GREEN}[OK]${NC}"
    else
        res_status="${RED}[KO]${NC}"
    fi

    if [[ "$OSTYPE" == "darwin"* ]]; then
        leaks -quiet --atExit -- ./pipex infile "$cmd1" "$cmd2" outfile > leaks_output.txt 2>/dev/null
        if grep -q "0 leaks" leaks_output.txt; then
            leaks_status="${GREEN}[OK]${NC}"
        else
            leaks_status="${RED}[KO]${NC}"
            cat leaks_output.txt
        fi
        rm -f leaks_output.txt
    else
        valgrind --leak-check=full --error-exitcode=42 ./pipex infile "$cmd1" "$cmd2" outfile > /dev/null 2>&1
        if [[ $? -eq 0 ]]; then
            leaks_status="${GREEN}[OK]${NC}"
        else
            leaks_status="${RED}[KO]${NC}"
        fi
    fi

    printf "  %-52s %-10b %-10b\n" "$desc" "$res_status" "$leaks_status"

    if [[ "$res_status" == *"[KO]"* ]]; then
        echo -e "${YELLOW}  Expected:${NC}\n$expected"
        echo -e "${YELLOW}  Got:${NC}\n$result"
    fi
}

print_header

run_test "Basic grep + wc" \
         "hello world\nfoo bar\nhello again" \
         "grep hello" \
         "wc -l"

run_test "Cat then grep apple" \
         "apple\nbanana\napple pie" \
         "cat" \
         "grep apple"

run_test "Grep nonexistent word" \
         "apple\nbanana\ncarrot" \
         "grep kiwi" \
         "wc -l"

lines=$(ls -l | wc -l)
run_test "Ls on empty infile" \
         "" \
         "ls -l" \
         "wc -l"

run_test "Cat with empty infile" \
         "" \
         "cat" \
         "wc -l"

printf "\n${CYAN}═══════════════════════════════════════════════════════════════════════════════${NC}\n"
printf "${GREEN}All tests completed.${NC}\n"
printf "${CYAN}═══════════════════════════════════════════════════════════════════════════════${NC}\n\n"
